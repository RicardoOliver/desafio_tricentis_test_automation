name: CI - Automação de Testes Tricentis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Permite execução manual do workflow

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Restaurar dependências
        run: dotnet restore

      - name: Compilar projeto
        run: dotnet build --configuration Release --no-restore

      - name: Instalar Google Chrome
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb

      - name: Verificar versão do Chrome
        run: google-chrome --version

      - name: Baixar ChromeDriver compatível (com fallback)
        run: |
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d. -f1)
          echo "Chrome major version: $CHROME_VERSION"
          mkdir -p drivers

          if wget -q "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION" -O chrome_version.txt; then
            CHROMEDRIVER_VERSION=$(cat chrome_version.txt)
          else
            echo "Versão específica não encontrada, usando última versão estável"
            wget -q "https://chromedriver.storage.googleapis.com/LATEST_RELEASE" -O chrome_version.txt
            CHROMEDRIVER_VERSION=$(cat chrome_version.txt)
          fi

          echo "ChromeDriver version: $CHROMEDRIVER_VERSION"
          wget -q "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
          unzip -o chromedriver_linux64.zip -d drivers/
          chmod +x drivers/chromedriver
          sudo mv drivers/chromedriver /usr/local/bin/chromedriver

      - name: Executar testes (modo headless)
        run: |
          mkdir -p Relatorios
          mkdir -p Evidencias
          dotnet test --configuration Release --no-build --verbosity normal
        env:
          CHROME_HEADLESS: 1

      - name: Publicar resultados de teste
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: TestResults/

      - name: Publicar relatórios
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: |
            Relatorios/
            Evidencias/
